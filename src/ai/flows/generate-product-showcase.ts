// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates a product showcase section using generative AI. 
 * The showcase dynamically incorporates relevant product details, example solutions, client references, and pricing plans based on the user segment.
 *
 * - generateProductShowcase - A function that generates the product showcase.
 * - GenerateProductShowcaseInput - The input type for the generateProductShowcase function.
 * - GenerateProductShowcaseOutput - The return type for the generateProductShowcase function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateProductShowcaseInputSchema = z.object({
  userSegment: z
    .string()
    .describe(
      'The user segment to tailor the product showcase to (e.g., enterprise, startup).'
    ),
});
export type GenerateProductShowcaseInput = z.infer<
  typeof GenerateProductShowcaseInputSchema
>;

const GenerateProductShowcaseOutputSchema = z.object({
  showcaseContent: z
    .string()
    .describe('The generated product showcase content in markdown format.'),
});
export type GenerateProductShowcaseOutput = z.infer<
  typeof GenerateProductShowcaseOutputSchema
>;

export async function generateProductShowcase(
  input: GenerateProductShowcaseInput
): Promise<GenerateProductShowcaseOutput> {
  return generateProductShowcaseFlow(input);
}

const generateProductShowcasePrompt = ai.definePrompt({
  name: 'generateProductShowcasePrompt',
  input: {schema: GenerateProductShowcaseInputSchema},
  output: {schema: GenerateProductShowcaseOutputSchema},
  prompt: `You are an expert marketing content creator for a cloud provider.

  Based on the user segment, create a compelling product showcase section for the landing page.
  Incorporate relevant product details, example solutions, client references, and pricing plans. Format the content in markdown.

  User Segment: {{{userSegment}}}
  `,
});

const generateProductShowcaseFlow = ai.defineFlow(
  {
    name: 'generateProductShowcaseFlow',
    inputSchema: GenerateProductShowcaseInputSchema,
    outputSchema: GenerateProductShowcaseOutputSchema,
  },
  async input => {
    const {output} = await generateProductShowcasePrompt(input);
    return output!;
  }
);
